---
const { targetDate } = Astro.props;
---

<div class="countdown-container">
  <div class="grid grid-cols-4 gap-2 md:gap-3 text-center">
    <div class="countdown-item">
      <div
        class="bg-gradient-to-br from-blue-50 via-white to-blue-50 rounded-xl shadow-md p-2 md:p-3 border border-blue-100/50 transform transition-all hover:scale-105 hover:shadow-lg hover:border-blue-200 duration-300"
      >
        <span
          id="days"
          class="block text-2xl md:text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-br from-blue-600 to-blue-700"
          >00</span
        >
        <span class="text-xs md:text-sm font-medium text-gray-600">Días</span>
      </div>
    </div>
    <div class="countdown-item">
      <div
        class="bg-gradient-to-br from-blue-50 via-white to-blue-50 rounded-xl shadow-md p-2 md:p-3 border border-blue-100/50 transform transition-all hover:scale-105 hover:shadow-lg hover:border-blue-200 duration-300"
      >
        <span
          id="hours"
          class="block text-2xl md:text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-br from-blue-600 to-blue-700"
          >00</span
        >
        <span class="text-xs md:text-sm font-medium text-gray-600">Horas</span>
      </div>
    </div>
    <div class="countdown-item">
      <div
        class="bg-gradient-to-br from-blue-50 via-white to-blue-50 rounded-xl shadow-md p-2 md:p-3 border border-blue-100/50 transform transition-all hover:scale-105 hover:shadow-lg hover:border-blue-200 duration-300"
      >
        <span
          id="minutes"
          class="block text-2xl md:text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-br from-blue-600 to-blue-700"
          >00</span
        >
        <span class="text-xs md:text-sm font-medium text-gray-600">Min</span>
      </div>
    </div>
    <div class="countdown-item">
      <div
        class="bg-gradient-to-br from-blue-50 via-white to-blue-50 rounded-xl shadow-md p-2 md:p-3 border border-blue-100/50 transform transition-all hover:scale-105 hover:shadow-lg hover:border-blue-200 duration-300"
      >
        <span
          id="seconds"
          class="block text-2xl md:text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-br from-blue-600 to-blue-700"
          >00</span
        >
        <span class="text-xs md:text-sm font-medium text-gray-600">Seg</span>
      </div>
    </div>
  </div>
</div>

<script define:vars={{ targetDate }}>
  // Función para actualizar el contador
  function updateCountdown() {
    const targetTime = new Date(targetDate).getTime();
    const now = new Date().getTime();
    const difference = targetTime - now;

    // Calcular días, horas, minutos y segundos
    const days = Math.floor(difference / (1000 * 60 * 60 * 24));
    const hours = Math.floor(
      (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
    );
    const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((difference % (1000 * 60)) / 1000);

    // Actualizar el DOM
    document.getElementById("days").innerText = days
      .toString()
      .padStart(2, "0");
    document.getElementById("hours").innerText = hours
      .toString()
      .padStart(2, "0");
    document.getElementById("minutes").innerText = minutes
      .toString()
      .padStart(2, "0");
    document.getElementById("seconds").innerText = seconds
      .toString()
      .padStart(2, "0");
  }

  // Actualizar inicialmente
  updateCountdown();

  // Actualizar cada segundo
  setInterval(updateCountdown, 1000);
</script>
