---
interface Props {
  eventDate: string;
}

const { eventDate } = Astro.props;

// Definir las unidades del contador
const units = [
  { id: "days", label: "Días" },
  { id: "hours", label: "Horas" },
  { id: "minutes", label: "Minutos" },
  { id: "seconds", label: "Segundos" },
];
---

<div class="countdown-container">
  <h3 class="text-2xl font-bold text-blue-600 mb-6">Faltan:</h3>
  <div class="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-2xl mx-auto">
    {
      units.map((unit) => (
        <div class="bg-blue-600 text-white rounded-lg p-4 shadow-md">
          <span id={unit.id} class="text-3xl md:text-4xl font-bold block">
            --
          </span>
          <span class="text-sm">{unit.label}</span>
        </div>
      ))
    }
  </div>
</div>

<script define:vars={{ eventDate }}>
  // Función para actualizar el contador
  function updateCountdown() {
    const targetTime = new Date(eventDate).getTime();
    const now = new Date().getTime();
    const difference = targetTime - now;

    // Calcular días, horas, minutos y segundos
    const days = Math.floor(difference / (1000 * 60 * 60 * 24));
    const hours = Math.floor(
      (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
    );
    const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((difference % (1000 * 60)) / 1000);

    // Actualizar el DOM
    document.getElementById("days").innerText = days
      .toString()
      .padStart(2, "0");
    document.getElementById("hours").innerText = hours
      .toString()
      .padStart(2, "0");
    document.getElementById("minutes").innerText = minutes
      .toString()
      .padStart(2, "0");
    document.getElementById("seconds").innerText = seconds
      .toString()
      .padStart(2, "0");
  }

  // Actualizar inicialmente
  updateCountdown();

  // Actualizar cada segundo
  setInterval(updateCountdown, 1000);
</script>

<style>
  .countdown-container {
    animation: pulse 2s infinite alternate;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    100% {
      transform: scale(1.02);
    }
  }
</style>
