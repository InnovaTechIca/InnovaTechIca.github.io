---
interface NavItem {
  name: string;
  href: string;
  icon?: string;
  badge?: string;
}

const navItems: NavItem[] = [
  { 
    name: "Inicio", 
    href: "/",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
          </svg>`
  },
  { 
    name: "Cronograma", 
    href: "/cronograma",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>`
  },
  { 
    name: "Ponentes", 
    href: "/ponentes",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>`
  },
  { 
    name: "Sponsors", 
    href: "/sponsors",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>`
  },
  { 
    name: "Equipo", 
    href: "/equipo",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>`
  }
];

interface Props {
  isMobile?: boolean;
  showIcons?: boolean;
}

const { isMobile = false, showIcons = true } = Astro.props;
const currentPath = Astro.url.pathname;

const isActive = (href: string) => {
  if (href === "/" && currentPath === "/") return true;
  if (href !== "/" && currentPath.startsWith(href)) return true;
  return false;
};
---

<style>
  /* Animaciones refinadas */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-8px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes glowPulse {
    0% {
      box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
    }
    70% {
      box-shadow: 0 0 0 6px rgba(59, 130, 246, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
    }
  }

  /* Animación para efecto de brillo al pasar el cursor */
  @keyframes shimmer {
    0% {
      background-position: -100% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
  
  /* Animación para degradado en movimiento */
  @keyframes gradientFlow {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  /* Elemento activo */
  .nav-item.active .nav-link {
    position: relative;
  }
  
  /* Efecto de brillo en hover */
  .shimmer-effect {
    background: linear-gradient(
      90deg,
      rgba(255,255,255,0) 0%, 
      rgba(255,255,255,0.8) 50%, 
      rgba(255,255,255,0) 100%
    );
    background-size: 200% 100%;
    animation: shimmer 2s infinite;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .nav-item:hover .shimmer-effect {
    opacity: 1;
  }
  
  /* Indicador de selección activa */
  .active-indicator {
    animation: glowPulse 2s infinite;
  }
  
  /* Animación para entrada escalonada */
  .nav-item {
    animation: fadeIn 0.6s forwards;
    animation-delay: calc(var(--idx) * 80ms);
    opacity: 0;
  }
  
  .mobile-nav-item {
    animation: scaleIn 0.4s forwards;
    animation-delay: calc(var(--idx) * 60ms);
    opacity: 0;
  }
</style>

<script>
  // Script para efecto de brillo que sigue al cursor
  document.addEventListener('DOMContentLoaded', () => {
    const navLinks = document.querySelectorAll('.nav-hover-track');
    
    navLinks.forEach(link => {
      link.addEventListener('mousemove', (e) => {
        const mouseEvent = e as MouseEvent;
        const rect = link.getBoundingClientRect();
        const x = ((mouseEvent.clientX - rect.left) / rect.width) * 100;
        const y = ((mouseEvent.clientY - rect.top) / rect.height) * 100;
        
        const highlight = link.querySelector('.highlight-follow') as HTMLElement;
        if (highlight) {
          highlight.style.background = `radial-gradient(circle at ${x}% ${y}%, rgba(59, 130, 246, 0.15) 0%, rgba(255, 255, 255, 0) 60%)`;
        }
      });
    });
  });
</script>

{
  isMobile ? (
    <div class="py-2">
      <ul class="space-y-1.5">
        {navItems.map((item, idx) => {
          const active = isActive(item.href);
          return (
            <li class="mobile-nav-item" style={`--idx: ${idx + 1}`}>
              <a 
                href={item.href}
                class={`flex items-center gap-3 p-3 rounded-xl relative group transition-all duration-300 ${
                  active 
                    ? "bg-gradient-to-r from-blue-500/10 to-blue-500/10 text-blue-700" 
                    : "hover:bg-blue-50/50 text-gray-700"
                }`}
              >
                {/* Icono con efecto */}
                <div class={`flex items-center justify-center w-9 h-9 rounded-lg transition-all duration-300 ${
                  active 
                    ? "gradient-bg text-white shadow-md shadow-blue-400/20" 
                    : "bg-gray-100/80 text-blue-500 group-hover:bg-blue-100/80 group-hover:text-blue-600"
                }`}>
                  <Fragment set:html={item.icon} />
                </div>
                
                {/* Textos con descripción */}
                <div class="flex flex-col">
                  <span class={`font-medium text-[15px] ${active ? "text-blue-700" : "text-gray-700"}`}>{item.name}</span>
                  <span class="text-xs text-gray-500 group-hover:text-blue-500 transition-colors duration-300">
                    {item.name === "Inicio" && "Página principal"}
                    {item.name === "Cronograma" && "Agenda del evento"}
                    {item.name === "Ponentes" && "Especialistas invitados"}
                    {item.name === "Sponsors" && "Nuestros patrocinadores"}
                    {item.name === "Equipo" && "Quiénes somos"}
                  </span>
                </div>
                
                {/* Indicador activo */}
                {active && (
                  <div class="ml-auto">
                    <div class="w-2 h-2 rounded-full bg-blue-500 active-indicator"></div>
                  </div>
                )}
              </a>
            </li>
          );
        })}
      </ul>
    </div>
  ) : (
    <ul class="flex items-center gap-1">
      {navItems.map((item, idx) => {
        const active = isActive(item.href);
        return (
          <li class="nav-item" style={`--idx: ${idx + 1}`}>
            <a 
              href={item.href}
              class={`nav-hover-track flex items-center gap-2 px-4 py-2 rounded-full relative group transition-all duration-300 ${
                active 
                  ? "font-medium" 
                  : ""
              }`}
            >
              {/* Fondo con animación/highlight que sigue al cursor */}
              <div class="highlight-follow absolute inset-0 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
              
              {/* Icono con animación */}
              <div class={`flex items-center justify-center w-7 h-7 rounded-full transition-all duration-300 ${
                active 
                  ? "bg-gradient-to-r from-blue-500 to-blue-600 text-white shadow-sm" 
                  : "bg-blue-50/80 text-blue-500 group-hover:bg-blue-100 group-hover:text-blue-600"
              }`}>
                <Fragment set:html={item.icon} />
              </div>
              
              {/* Texto */}
              <span class={`text-sm ${active ? "text-blue-700" : "text-gray-700 group-hover:text-blue-600"}`}>
                {item.name}
              </span>
              
              {/* Indicador de activo */}
              {active && (
                <span class="absolute -bottom-1.5 left-1/2 transform -translate-x-1/2 w-1.5 h-1.5 bg-blue-500 rounded-full active-indicator"></span>
              )}
              
              {/* Efecto de brillo en hover */}
              <div class="shimmer-effect absolute inset-0 rounded-full opacity-0 group-hover:opacity-1"></div>
            </a>
          </li>
        );
      })}
    </ul>
  )
}
