---
---

<script is:inline>
  // Push-content mobile menu implementation
  (function () {
    // Function to initialize mobile menu
    function initMobileMenu() {
      const menuButton = document.getElementById("mobile-menu-button");
      const mobileMenu = document.getElementById("mobile-menu");
      const mainContent = document.querySelector("main");
      const navbar = document.getElementById("navbar-container");

      console.log("Push-content mobile menu init...", {
        menuButton: !!menuButton,
        mobileMenu: !!mobileMenu,
        mainContent: !!mainContent,
      });

      if (!menuButton || !mobileMenu) {
        console.error("Menu elements not found, retrying...");
        setTimeout(initMobileMenu, 200);
        return;
      }
      
      let menuOpen = false;
      let menuHeight = 0; // Will store menu height when open
      let scrollPos = 0;

      // Save the original hamburger icon
      const hamburgerIcon = menuButton.innerHTML;

      // Create close icon
      const closeIcon = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      `;

      // Calculate the content height of the menu
      function calculateMenuHeight() {
        // Temporarily make menu visible to calculate height
        const originalDisplay = mobileMenu.style.display;
        const originalMaxHeight = mobileMenu.style.maxHeight;
        const originalOpacity = mobileMenu.style.opacity;
        const originalVisibility = mobileMenu.style.visibility;

        mobileMenu.style.display = "block";
        mobileMenu.style.maxHeight = "none";
        mobileMenu.style.opacity = "0";
        mobileMenu.style.visibility = "hidden";
        mobileMenu.classList.remove("hidden");

        const height = mobileMenu.scrollHeight;

        // Restore original states
        mobileMenu.style.display = originalDisplay;
        mobileMenu.style.maxHeight = originalMaxHeight;
        mobileMenu.style.opacity = originalOpacity;
        mobileMenu.style.visibility = originalVisibility;
        if (!menuOpen) mobileMenu.classList.add("hidden");

        return height;
      }
      
      // Calculate viewport height and adjust for content
      function getAvailableHeight() {
        const viewportHeight = window.innerHeight;
        const headerHeight = 70; // Header height in pixels
        return viewportHeight - headerHeight;
      }
      
      // Function to open the menu with smooth animation
      function openMenu() {
        // Get available height
        const availableHeight = getAvailableHeight();

        // Calculate menu height if not done already
        if (menuHeight === 0) {
          menuHeight = calculateMenuHeight();
        }

        // Use the smaller of calculated height or available height
        const finalHeight = Math.min(menuHeight, availableHeight);

        // First remove hidden to make the menu visible
        mobileMenu.classList.remove("hidden");

        // Use requestAnimationFrame to ensure proper transition
        requestAnimationFrame(() => {
          requestAnimationFrame(() => {
            mobileMenu.classList.add("open");
            mobileMenu.style.maxHeight = finalHeight + "px";

            // Add subtle bounce effect to the main content
            if (mainContent) {
              mainContent.style.transition =
                "transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1)";
              mainContent.style.transform = "translateY(5px)";
              setTimeout(() => {
                mainContent.style.transform = "translateY(0)";
              }, 400);
            }

            // Add subtle background dimming effect
            document.body.classList.add("bg-transition");
          });
        });

        // Prevent body scrolling
        scrollPos = window.pageYOffset;
        document.body.style.overflow = "hidden";
        document.body.style.position = "fixed";
        document.body.style.top = `-${scrollPos}px`;
        document.body.style.width = "100%";
        document.body.classList.add("menu-open");

        // Change button appearance with animation
        menuButton.style.transform = "rotate(90deg)";
        setTimeout(() => {
          menuButton.innerHTML = closeIcon;
          menuButton.style.transform = "rotate(0)";
        }, 150);

        menuButton.setAttribute("aria-label", "Cerrar menú");
        menuButton.setAttribute("aria-expanded", "true");
        menuOpen = true;
        console.log("Menu opened with height:", finalHeight);
      }

      // Function to close the menu with smooth animation
      function closeMenu() {
        mobileMenu.classList.remove("open");
        mobileMenu.style.maxHeight = "0px";

        // Small animation for the button
        menuButton.style.transform = "rotate(-90deg)";
        setTimeout(() => {
          menuButton.innerHTML = hamburgerIcon;
          menuButton.style.transform = "rotate(0)";
        }, 150);

        // Re-enable body scrolling
        document.body.style.removeProperty("overflow");
        document.body.style.removeProperty("position");
        document.body.style.removeProperty("top");
        document.body.style.removeProperty("width");
        window.scrollTo(0, scrollPos);
        document.body.classList.remove("menu-open");
        document.body.classList.remove("bg-transition");

        // Add hidden class after transition completes
        setTimeout(() => {
          if (!menuOpen) {
            mobileMenu.classList.add("hidden");
          }
        }, 500); // Match the transition duration in CSS

        menuButton.innerHTML = hamburgerIcon;
        menuButton.setAttribute("aria-label", "Abrir menú");
        menuButton.setAttribute("aria-expanded", "false");
        menuOpen = false;
        console.log("Menu closed");
      }

      // Toggle menu function
      function toggleMenu(e) {
        e.preventDefault();
        console.log("Toggle menu called");

        if (menuOpen) {
          closeMenu();
        } else {
          openMenu();
        }
      }

      // Add click event listener to menu button
      menuButton.addEventListener("click", toggleMenu);

      // Close menu when clicking links
      const links = mobileMenu.querySelectorAll("a");
      links.forEach((link) => {
        link.addEventListener("click", closeMenu);
      });

      // Handle window resize events
      window.addEventListener("resize", () => {
        if (window.innerWidth >= 1024 && menuOpen) {
          // Close menu in desktop mode
          closeMenu();
        } else if (menuOpen) {
          // In mobile mode, adjust height based on viewport
          const availableHeight = getAvailableHeight();
          menuHeight = calculateMenuHeight();
          const finalHeight = Math.min(menuHeight, availableHeight);
          mobileMenu.style.maxHeight = finalHeight + "px";
        }
      });

      console.log("Push-content mobile menu initialized successfully");
    }

    // Try to initialize immediately
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initMobileMenu);
    } else {
      // DOM already ready, run init
      initMobileMenu();
    }

    // Backup initialization on window load
    window.addEventListener("load", initMobileMenu);
  })();
</script>

<style is:global>
  body.menu-open {
    overflow: hidden;
  }
  
  body.bg-transition::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.2);
    z-index: 30;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    pointer-events: none;
  }
  
  body.menu-open.bg-transition::before {
    opacity: 1;
  }
</style>
